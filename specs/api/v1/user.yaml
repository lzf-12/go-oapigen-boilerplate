openapi: 3.0.0
info:
  title: User Domain API
  version: 1.0.0
paths:
  /api/v1/users:
    get:
      summary: Get all users
      parameters:
        - name: role
          in: query
          description: role to filter by
          required: false
          style: form
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Create a new user
      description: Creates a new user with the given information
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        error_code:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        age:
          type: integer
        role:
          type: string
    CreateUserResponse:
      type: object
      required:
        - email
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        age:
          type: integer
        role:
          type: string
    CreateUserRequest:
      type: object
      required:
        - username
        - email
        - role
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-zA-Z0-9_]+$'
        email:
          type: string
          format: email
        age:
          type: integer
          minimum: 18
          maximum: 120
        role:
          type: string
          enum:
            - admin
            - member